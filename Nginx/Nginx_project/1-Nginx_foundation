
# yum install nginx -y
# yum update -y
# systemctl start nginx         #it will make nginx server up and running into my linux
# systemctl reload nginx
# curl ifconfig.me              #to get public ip of your linux server

==> Go to your browser and browse the url "http://your_public_ip or server_name".


1. Edit the main configuration file to host a custom application.
# vi /etc/nginx/nginx.conf
--------------------------------------------------------------------------------------------------------------
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root         /usr/share/nginx/html;         #change this location to your custom application location

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html {                     
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#        location = /404.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#        location = /50x.html {
#        }
#    }

}
--------------------------------------------------------------------------------------------------------------

2. Host three custom application by creating a custom configuration file.
# vi /etc/nginx/conf.d/custom_app.conf
--------------------------------------------------------------------------------------------------------------
server {
    listen 80;
    server_name your_server_ip or server_name;
    root /etc/nginx/website/app;            #/absolute/path/to/your/application


    # Location blocks for static content
    location /app1/ {                        #you can replace /app1/ with your preferred name
        alias /etc/nginx/website/app1/;      #/absolute/path/to/your/application-1
        index index.html index.htm;
    }

    location /app2/ {                        #you can replace /app2/ with your preferred name
        alias /etc/nginx/website/app2/;      #/absolue/path/to/your/application-2
        index index.html index.htm;
    }

    location /app3/ {                        #you can replace /app3/ with your preferred name
        alias /etc/nginx/website/app3/;      #/absolute/path/to/your/application-3
        index index.html index.htm;
    }
}
--------------------------------------------------------------------------------------------------------------
# nginx -t
# systemctl reload nginx

==> Go to your browser and browse the url "http://your_public_ip/app" then "http://your_public_ip/app1/" then
"http://your_public_ip/app2/" and then "http://your_public_ip/app3/".


3. Host three custom application with error file if in case something went wrong
# vi /etc/nginx/conf.d/custom_app.conf
--------------------------------------------------------------------------------------------------------------
server {
    listen 80;
    server_name your_server_ip or server_name;
    root /etc/nginx/website/app;            #absolute/path/to/your/application
         

    # Location blocks for static content
    location /app1/ {                       #you can replace /app1/ with your preferred name 
        alias /etc/nginx/website/app1/;     #/absolute/path/to/your/application-1
        index index.html index.htm;
    }

    location /app2/ {                       #you can replace /app2/ with your preferred name
        alias /etc/nginx/website/app2/;     #/absolute/path/to/your/application-2
        index index.html index.htm;
    }

    location /app3/ {                       #you can replace /app3/ with your preferred name
        alias /etc/nginx/website/app3/;     #/absolute/path/to/your/application-3
        index index.html index.htm;
    }

    # Location block for custom 404 error page
    error_page 404 /custom_404.html;
    location = /custom_404.html {
        root /etc/nginx/website            #/absolute/path/to/your/error_pages
        internal;
    }

    # Location block for custom 50x error page
    error_page 500 502 503 504 /custom_50x.html;
    location = /custom_50x.html {
        root /etc/nginx/website           #/absolute/path/to/your/error_pages
        internal;
    }
}
--------------------------------------------------------------------------------------------------------------
# nginx -t
# systemctl reload nginx

==> Go to your browser and browse the url "http://your_public_ip/app1/" then "http://your_public_ip/app2/" and
then "http://your_public_ip/app3/".
==> For error_pages 404 browse something unusual url like "http://your_public_ip/app" and for error_pages 5ox
stop nginx server(# systemctl stop nginx) and then browse a url "http://Your_public_ip/".

